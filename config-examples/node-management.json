{
  "orchestrator": { // rename to Orchestration
    "DynamicManagementConfig": {
      "Url": "http:/localhost:7666/node/management",
      "ReadInterval": "1m",
      "ResetTimeout": "30m"
    },
    "storage-driver": "nfs", // rename to StorageDriver
    "storage-options": { // rename to StorageOptions
      "maxRetries": "10"
    }
  },
  "chains": [ // rename to VirtualChains
    {
      "Id":         42,
      // add: "InternalHttpPort":   8080, // source is Noam (identical for all vchains)
      "HttpPort":   8001, // rename to ExternalHttpPort, source is admin (different for all vchains)
      // add: "InternalGossipPort": 4040, // source is Noam (identical for all vchains)
      "GossipPort": 4001, // rename to ExternalHttpPort, source is admin (different for all vchains)
      "Disabled": false,
      "DockerConfig": {
        "Image":  "orbsnetwork/node",
        "Tag":    "v1.1.0",
        "Pull":   true,
        "Resources": {
          "Limits": {
            "Memory": 1024,
            "CPUs": 1
          },
          "Reservations": {
            "Memory": 512,
            "CPUs": 0.5
          }
        }
      },
      "Config": {
        "ManagementConfigUrl": "http://1.1.1.1/vchains/42/management",
        "SignerUrl": "http://1.1.1.1/signer"           
      }
    }
  ],
  "services": { // rename to NodeServices
    "signer": {
      "Port": 7777, // rename to InternalPort
      "DockerConfig": {
        "Image":  "orbsnetwork/orbs-network-signer",
        "Tag":    "v1.1.0",
        "Pull":   true
      },
      "Config": {
        "api": "v1"
      }
    },
    "management-service": {
      "Port": 8080, // rename to InternalPort, source is Amir
      "ExternalPort": 7666, // source is admin (must be unique)
      "DockerConfig": {
        "Image":  "orbsnetwork/management-service",
        "Tag":    "v1.1.0",
        "Pull":   true,
      },
      "Config": {
        "EthereumGenesisContract": "0x2384723487623784638272348",
        "EthereumEndpoint": "http://eth.orbs.com"
      }
    }
  }
}
