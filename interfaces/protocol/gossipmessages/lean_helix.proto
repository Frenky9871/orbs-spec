syntax = "proto3";
package gossipmessages;
option go_package = "github.com/orbs-network/orbs-spec/types/go/protocol/gossipmessages";

import "../primitives/crypto.proto";
import "../primitives/protocol.proto";
import "../primitives/integers.proto";
import "../protocol/gossipmessages/all.proto";
import "../protocol/blocks.proto";
import "../protocol/consensus/lean_helix.proto";

// message format

message LeanHelixMessage {
    option serialize_message = false;

    consensus.LeanHelixMessageType message_type = 1;
    primitives.lean_helix_message_content content = 2;
    protocol.BlockPairContainer block_pair = 3;
}
//
//message LeanHelixPrepareMessage {
//    option serialize_message = false;
//
//    consensus.LeanHelixBlockRef signed_header = 1;
//    consensus.LeanHelixSenderSignature sender = 2; // signs on signed_header
//}
//
//message LeanHelixCommitMessage {
//    option serialize_message = false;
//
//    consensus.LeanHelixBlockRef signed_header = 1;
//    consensus.LeanHelixSenderSignature sender = 2; // signs on signed_header
//    LeanHelixRandomSeedShare share = 3;
//}
//
//message LeanHelixViewChangeMessage {
//    option serialize_message = false;
//
//    LeanHelixViewChangeHeader signed_header = 1;
//    consensus.LeanHelixSenderSignature sender = 2; // signs on signed_header
//    protocol.BlockPairContainer block_pair = 3;
//}
//
//message LeanHelixNewViewMessage {
//    option serialize_message = false;
//
//    LeanHelixNewViewHeader signed_header = 1;
//    consensus.LeanHelixSenderSignature sender = 2; // signs on signed_header
//    LeanHelixPrePrepareMessage pre_prepare_message = 3;
//}

// message payloads (serializable)

message LeanHelixRandomSeedShare {
    primitives.bls1_sig random_seed_share = 1;
}

//message LeanHelixViewChangeHeader {
//    consensus.LeanHelixMessageType message_type = 1;
//    primitives.block_height block_height = 2;
//    uint32 view = 3;
//    LeanHelixPreparedProof prepared_proof = 4;
//}
//
//message LeanHelixPreparedProof {
//    consensus.LeanHelixBlockRef pre_prepare_block_ref = 1;
//    consensus.LeanHelixSenderSignature pre_prepare_sender = 2;
//    consensus.LeanHelixBlockRef prepare_block_ref = 3;
//    repeated consensus.LeanHelixSenderSignature prepare_senders = 4;
//}
//
//message LeanHelixNewViewHeader {
//    consensus.LeanHelixMessageType message_type = 1;
//    primitives.block_height block_height = 2;
//    uint32 view = 3;
//    repeated LeanHelixViewChangeConfirmation view_change_confirmations = 4;
//}
//
//message LeanHelixViewChangeConfirmation {
//    LeanHelixViewChangeHeader view_change_signed_header = 1;
//    consensus.LeanHelixSenderSignature view_change_sender = 2;
//}

