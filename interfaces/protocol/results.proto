syntax = "proto3";
package protocol;
option go_package = "github.com/orbs-network/orbs-spec/types/go/protocol";

enum ErrorCodes {
    ERROR_CODE_RESERVED = 0;
    ERROR_CODE_OUT_OF_SYNC = 1;
    ERROR_CODE_INVALID = 2;
}

// ExecutionResult is the result of the execution phase of the consensus over a transaction
enum ExecutionResult {
    EXECUTION_RESULT_RESERVED = 0;
    EXECUTION_RESULT_SUCCESS = 1;
    EXECUTION_RESULT_ERROR_SMART_CONTRACT = 2;
    EXECUTION_RESULT_ERROR_INPUT = 3; 
    EXECUTION_RESULT_ERROR_UNEXPECTED = 4; // system error during execution
}

enum TransactionStatus {
    TRANSACTION_STATUS_RESERVED = 0;                                // REQUEST_STATUS_RESERVED;
    TRANSACTION_STATUS_COMMITTED = 1;                               // REQUEST_STATUS_COMPLETED
    TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_COMMITTED = 2; // REQUEST_STATUS_COMPLETED
    TRANSACTION_STATUS_PENDING = 3;                                 // REQUEST_STATUS_IN_PROCESS
    TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_PENDING = 4;   // REQUEST_STATUS_IN_PROCESS
    TRANSACTION_STATUS_PRE_ORDER_VALID = 5;                         // REQUEST_STATUS_RESERVED - node internal status, cannot return to clients
    TRANSACTION_STATUS_NO_RECORD_FOUND = 6;                         // REQUEST_STATUS_NOT_FOUND
    TRANSACTION_STATUS_REJECTED_UNSUPPORTED_VERSION = 7;            // REQUEST_STATUS_REJECTED
    TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_MISMATCH = 8;         // REQUEST_STATUS_REJECTED
    TRANSACTION_STATUS_REJECTED_TIMESTAMP_WINDOW_EXCEEDED = 9;      // REQUEST_STATUS_REJECTED
    TRANSACTION_STATUS_REJECTED_SIGNATURE_MISMATCH = 10;            // REQUEST_STATUS_REJECTED
    TRANSACTION_STATUS_REJECTED_UNKNOWN_SIGNER_SCHEME = 11;         // REQUEST_STATUS_REJECTED
    TRANSACTION_STATUS_REJECTED_GLOBAL_PRE_ORDER = 12;              // REQUEST_STATUS_REJECTED
    TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_PRE_ORDER = 13;       // REQUEST_STATUS_REJECTED
    TRANSACTION_STATUS_REJECTED_SMART_CONTRACT_PRE_ORDER = 14;      // REQUEST_STATUS_REJECTED
    TRANSACTION_STATUS_REJECTED_TIMESTAMP_AHEAD_OF_NODE_TIME = 15;  // REQUEST_STATUS_REJECTED
    TRANSACTION_STATUS_REJECTED_CONGESTION = 16;                    // REQUEST_STATUS_CONGESTION
}

enum RequestStatus { 
    REQUEST_STATUS_RESERVED = 0;            // HTTP Status 500
    REQUEST_STATUS_COMPLETED = 1;           // HTTP Status 200
    REQUEST_STATUS_IN_PROCESS = 2;          // HTTP Status 202
    REQUEST_STATUS_NOT_FOUND = 3;           // HTTP Status 404
    REQUEST_STATUS_REJECTED = 4;            // HTTP Status 400
    REQUEST_STATUS_CONGESTION = 5;          // HTTP Status 503
//    REQUEST_STATUS_SYSTEM_ERROR = 6;
}

