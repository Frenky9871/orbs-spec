syntax = "proto3";
package services;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services";

import "primitives/protocol.proto";

option serialize_messages = false;

service CrosschainConnector {
    // called by VirtualMachine
    rpc EthereumCallContract (EthereumCallContractInput) returns (EthereumCallContractOutput);
    rpc EthereumGetTransactionLogs (EthereumGetTransactionLogsInput) returns (EthereumGetTransactionLogsOutput); 
}

message EthereumCallContractInput {
    primitives.timestamp_nano reference_timestamp = 1;
    string ethereum_contract_address = 2;
    string ethereum_function_name = 3;
    string ethereum_json_abi = 4;
    bytes ethereum_abi_packed_input_arguments = 5;
}

message EthereumCallContractOutput {
    bytes ethereum_abi_packed_output = 1;
}

message EthereumGetTransactionLogsInput {
    primitives.timestamp_nano reference_timestamp = 1;
    string ethereum_contract_address = 2;
    string ethereum_event_name = 3;
    string ethereum_json_abi = 4;
    string ethereum_txhash = 5;
}

message EthereumGetTransactionLogsOutput {
    repeated bytes ethereum_abi_packed_outputs = 1;
    uint64 ethereum_block_number = 2;
    uint32 ethereum_txindex = 3;
}