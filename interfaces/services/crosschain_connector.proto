syntax = "proto3";
package services;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services";

import "primitives/protocol.proto";
import "protocol/results.proto";
import "protocol/contracts.proto";

option serialize_messages = false;

service CrosschainConnector {
    // called by VirtualMachine
    rpc EthereumCallContract (EthereumCallContractInput) returns (EthereumCallContractOutput); // TODO: don't we need implementation per connector
}

message EthereumCallContractInput {
    primitives.timestamp_nano reference_timestamp = 1;
    string ethereum_contract_address = 2;
    string ethereum_function_name = 3;
    string ethereum_abi = 4;
    bytes ethereum_packed_input_arguments = 5;
}

message EthereumCallContractOutput {
    bytes ethereum_packed_output = 1;
}